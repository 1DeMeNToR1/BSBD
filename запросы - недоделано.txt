1) Поиск автомобиля по винкоду
CREATE OR REPLACE FUNCTION Найти_Автомобиль_По_Винкоду(vin_код VARCHAR(50))
RETURNS TABLE (
    ID_Автомобиля INTEGER,
    Марка VARCHAR(50),
    Модель VARCHAR(50),
    Год INTEGER,
    Номер_СТС VARCHAR(20),
    ID_Владельца INTEGER,
    VIN_Номер VARCHAR(50)
) AS
$$
BEGIN
    RETURN QUERY
    SELECT
        a.ID_Автомобиля,
        a.Марка,
        a.Модель,
        a.Год,
        a.Номер_СТС,
        a.ID_Владельца,
        a.VIN_Номер
    FROM
        Автомобили a
    WHERE
        a.VIN_Номер = vin_код;
END;
$$
LANGUAGE plpgsql;
------------------------------------------------------------
SELECT * FROM Найти_Автомобиль_По_Винкоду('VIN123ABC');
------------------------------------------------------------
2) Выдать список запчастей по заданной марке и модели авто - ???
CREATE OR REPLACE FUNCTION Список_Запчастей_По_Марке_И_Модели(
    автомобиль_марка VARCHAR(50),
    автомобиль_модель VARCHAR(50))
RETURNS TABLE (
    ID_Запчасти INTEGER,
    Наименование VARCHAR(100),
    Артикул VARCHAR(20),
    Описание TEXT,
    Стоимость DECIMAL(10, 2)
) AS
$$
BEGIN
    RETURN QUERY
    SELECT
        z.ID_Запчасти,
        z.Наименование,
        z.Артикул,
        z.Описание,
        z.Стоимость
    FROM
        Запчасти z
    JOIN
        Проданные_Запчасти_В_Заказе pz ON z.ID_Запчасти = pz.ID_Запчасти
    JOIN
        Заказы o ON pz.ID_Заказа = o.ID_Заказа
    JOIN
        Автомобили a ON o.ID_Автомобиля = a.ID_Автомобиля
    WHERE
        a.Марка = автомобиль_марка
        AND a.Модель = автомобиль_модель;
END;
$$
LANGUAGE plpgsql;
------------------------------------------------------------
SELECT * FROM Список_Запчастей_По_Марке_И_Модели('Toyota', 'Camry');
------------------------------------------------------------
3) Вывести список автомобилей, которые в данный момент находятся в сервисе
CREATE OR REPLACE FUNCTION Список_Автомобилей_В_Сервисе()
RETURNS TABLE (
    ID_Автомобиля INTEGER,
    Марка VARCHAR(50),
    Модель VARCHAR(50),
    Год INTEGER,
    Номер_СТС VARCHAR(20),
    ID_Владельца INTEGER,
    VIN_Номер VARCHAR(50)
) AS
$$
BEGIN
    RETURN QUERY
    SELECT
        a.ID_Автомобиля,
        a.Марка,
        a.Модель,
        a.Год,
        a.Номер_СТС,
        a.ID_Владельца,
        a.VIN_Номер
    FROM
        Заказы o
    JOIN
        Автомобили a ON o.ID_Автомобиля = a.ID_Автомобиля
    WHERE
        o.Статус_Заказа = 'В процессе';
END;
$$
LANGUAGE plpgsql;
------------------------------------------------------------
SELECT * FROM Список_Автомобилей_В_Сервисе();
------------------------------------------------------------
4) Получить суммарную выручку от услуг для каждого сотрудника за последний месяц
CREATE OR REPLACE FUNCTION Сумм_Выруч_Услуг_За_Месяц()
RETURNS TABLE (
    ID_Сотрудника INTEGER,
    Имя VARCHAR(50),
    Фамилия VARCHAR(50),
    Отчество VARCHAR(50),
    Должность VARCHAR(50),
    Выручка DECIMAL(10, 2)
) AS
$$
BEGIN
    RETURN QUERY
    SELECT
        s.ID_Сотрудника,
        s.Имя,
        s.Фамилия,
        s.Отчество,
        s.Должность,
        COALESCE(SUM(p.Сумма_платежа), 0.00) AS Выручка
    FROM
        Сотрудники s
    LEFT JOIN
        График_Работы g ON s.ID_Сотрудника = g.ID_Сотрудника
    LEFT JOIN
        Платежи p ON g.Дата >= (CURRENT_DATE - INTERVAL '1 month')
                AND g.Дата <= CURRENT_DATE
    GROUP BY
        s.ID_Сотрудника,
        s.Имя,
        s.Фамилия,
        s.Отчество,
        s.Должность;
END;
$$
LANGUAGE plpgsql;
------------------------------------------------------------
SELECT * FROM Сумм_Выруч_Услуг_За_Месяц();
------------------------------------------------------------
5) Получить количество услуг каждого типа, предоставленных за последний год
CREATE OR REPLACE FUNCTION Количество_Услуг_По_Типу_За_Год()
RETURNS TABLE (
    Вид_Услуги VARCHAR(50),
    Количество BIGINT
) AS
$$
BEGIN
    RETURN QUERY
    SELECT
        us.Вид_Услуги,
        COUNT(*) AS Количество
    FROM
        Услуги_В_Заказе u
    JOIN
        Заказы o ON u.ID_Заказ = o.ID_Заказа
    JOIN
        Услуги us ON u.ID_Услуги = us.ID_Услуги
    WHERE
        o.Дата_Заказа >= (CURRENT_DATE - INTERVAL '1 year')
        AND o.Дата_Заказа <= CURRENT_DATE
    GROUP BY
        us.Вид_Услуги;
END;
$$
LANGUAGE plpgsql;
------------------------------------------------------------
SELECT * FROM Количество_Услуг_По_Типу_За_Год();
------------------------------------------------------------
6) Получить суммарную стоимость запчастей в заказах за последний месяц
CREATE OR REPLACE FUNCTION Стоимость_Запчастей_За_Месяц()
RETURNS TABLE (
    Суммарная_Стоимость DECIMAL(10, 2)
) AS
$$
BEGIN
    RETURN QUERY
    SELECT
        COALESCE(SUM(z.Стоимость * pz.Количество), 0.00) AS Суммарная_Стоимость
    FROM
        Проданные_Запчасти_В_Заказе pz
    JOIN
        Запчасти z ON pz.ID_Запчасти = z.ID_Запчасти
    JOIN
        Заказы o ON pz.ID_Заказа = o.ID_Заказа
    WHERE
        o.Дата_Заказа >= (CURRENT_DATE - INTERVAL '1 month')
        AND o.Дата_Заказа <= CURRENT_DATE;
END;
$$
LANGUAGE plpgsql;
------------------------------------------------------------
SELECT * FROM Стоимость_Запчастей_За_Месяц();
------------------------------------------------------------
7) Выписать выплаченные платежи
CREATE OR REPLACE FUNCTION Выписать_Выплаченные_Платежи()
RETURNS TABLE (
    Платеж_ID INTEGER,
    Сумма_платежа DECIMAL(10, 2),
    Дата_платежа DATE,
    Статус_платежа TEXT
) AS $$
BEGIN
    RETURN QUERY
    SELECT
        ID_Платежа,
        Платежи.Сумма_платежа,
        Платежи.Дата_платежа,
        Платежи.Статус_платежа
    FROM Платежи
    WHERE Платежи.Статус_платежа = 'Выполнен';
END;
$$ LANGUAGE plpgsql;
------------------------------------------------------------
SELECT * FROM Выписать_Выплаченные_Платежи();
------------------------------------------------------------
8) Посчитать остаток по платежам для клиента
CREATE OR REPLACE FUNCTION Остаток_По_Платежам(ID_Владельца_Параметр INT)
RETURNS TABLE (
    Имя_Владельца VARCHAR(50),
    Фамилия_Владельца VARCHAR(50),
    Отчество_Владельца VARCHAR(50),
    Марка_Машины VARCHAR(50),
    Модель_Машины VARCHAR(50),
    Остаток DECIMAL(10, 2)
)
AS $$
BEGIN
    RETURN QUERY
    SELECT
        Владелец_Авто.Имя,
        Владелец_Авто.Фамилия,
        Владелец_Авто.Отчество,
        Автомобили.Марка,
        Автомобили.Модель,
        COALESCE(SUM(CASE WHEN Платежи.Статус_платежа = 'Выполнен' THEN NULL ELSE Платежи.Сумма_платежа END), 0) AS Остаток
    FROM
        Владелец_Авто
    LEFT JOIN Автомобили ON Владелец_Авто.ID_Владельца = Автомобили.ID_Владельца
    LEFT JOIN Заказы ON Автомобили.ID_Автомобиля = Заказы.ID_Автомобиля
    LEFT JOIN Платежи ON Заказы.ID_Заказа = Платежи.ID_Заказа
    WHERE
        Владелец_Авто.ID_Владельца = ID_Владельца_Параметр
    GROUP BY
        Владелец_Авто.Имя,
        Владелец_Авто.Фамилия,
        Владелец_Авто.Отчество,
        Автомобили.Марка,
        Автомобили.Модель;

END;
$$ LANGUAGE plpgsql;
------------------------------------------------------------
SELECT Остаток_По_Платежам(3);
------------------------------------------------------------
9) Выгрузить платежи по машинам клиента
10)выдать данные о заданном авто и состоянии выполненных работ 
11)Выдать историю обслуживаний автомобиля по заданному клиенту 
12)Выдать сотрудников, которые выолняли виды работ для заданного авто
13)Получить суммарную выручку за последний месяц
14)Получить самую частую по посещению сервиса машину
15)Получить топ-3 самых популярных услуг
16)Получить самого частого клиента

